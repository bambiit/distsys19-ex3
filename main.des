INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI

    root = Tk()
    root.title("A Watch")
    g = DWatchGUI(root, eventhandler)

    eventhandler.start()
    root.mainloop()

STATECHART:
    NORMAL_STATE [DS]
        RUNNING_TIME [DS][CS]
    BOTTOM_RIGHT_BUTTON_HOLDING [CS]
    EDIT_TIME
        EDIT_MODE [DS]
        INCREASING_TIME
    CHRONO [HS]
        STOP [DS]
        RUNNING

TRANSITION:
    S: NORMAL_STATE.RUNNING_TIME
    N: NORMAL_STATE.RUNNING_TIME
    T: 1
    O: g.updateRunningTime()

TRANSITION: [-1]
    S: NORMAL_STATE
    N: BOTTOM_RIGHT_BUTTON_HOLDING
    E: bottomRightPressed

TRANSITION: [0]
    S: EDIT_TIME.EDIT_MODE
    N: BOTTOM_RIGHT_BUTTON_HOLDING
    E: bottomRightPressed
    O: [DUMP("Press to stop editing")]

TRANSITION: [0]
    S: BOTTOM_RIGHT_BUTTON_HOLDING
    N: EDIT_TIME
    E: editTime
    O: [DUMP("Enter edit time mode")]

TRANSITION: [-1]
    S: NORMAL_STATE.RUNNING_TIME
    N: EDIT_TIME
    E: editTime
    O: [DUMP("Stop running time to edit")]

TRANSITION: [0]
    S: BOTTOM_RIGHT_BUTTON_HOLDING
    N: NORMAL_STATE
    E: finishEdit
    O: [DUMP("Stop editing time")]

TRANSITION: [-1]
    S: EDIT_TIME.EDIT_MODE
    N: NORMAL_STATE
    E: finishEdit
    O: [DUMP("Stop editing time")]

TRANSITION:
    S: EDIT_TIME.EDIT_MODE
    N: EDIT_TIME.INCREASING_TIME
    E: increase
    O: [DUMP("Start adjusting Time")]
       g.updateRunningTime()

TRANSITION:
    S: EDIT_TIME.INCREASING_TIME
    N: EDIT_TIME.INCREASING_TIME
    T: 0.3
    O: [DUMP("Adjusting Time")]
       g.updateRunningTime()

TRANSITION:
    S: EDIT_TIME.INCREASING_TIME
    N: EDIT_TIME.EDIT_MODE
    E: stopInc
    O: [DUMP("Stop adjusting Time")]

TRANSITION:
    S: EDIT_TIME.EDIT_MODE
    N: EDIT_TIME.EDIT_MODE
    T: 5
    O: [DUMP("Stop waiting for editing action")]
       g.waitingEditExpired()

TRANSITION: [HS]
    S: NORMAL_STATE
    N: CHRONO
    E: changeMode
    O: print "DISPLAY -> CHRONO"
       g.turnOffTimeDisplayMode()
       g.refreshChronoDisplay()
       g.backgroundChronoModeOff()

TRANSITION:
    S: CHRONO.STOP
    N: NORMAL_STATE
    E: changeMode
    O: print "CHRONO -> DISPLAY"
       g.turnOnTimeDisplayMode()
       g.refreshTimeDisplay()

TRANSITION:
    S: CHRONO.RUNNING
    N: NORMAL_STATE
    E: changeMode
    O: print "CHRONO -> DISPLAY, CHRONO BACKGROUND"
       g.turnOnTimeDisplayMode()
       g.refreshTimeDisplay()
       g.backgroundChronoModeOn()
       g.startThreadBackgroundChrono()

TRANSITION:
    S: CHRONO.STOP
    N: CHRONO.RUNNING
    E: initChrono
    O: print "CHRONO STARTED"

TRANSITION:
    S: CHRONO.RUNNING
    N: CHRONO.RUNNING
    T: 0.25
    O: g.chronoRunning()
       g.refreshChronoDisplay()

TRANSITION:
    S: CHRONO.RUNNING
    N: CHRONO.STOP
    E: initChrono
    O: print "CHRONO STOPPED"

TRANSITION:
    S: CHRONO.STOP
    N: CHRONO.STOP
    E: resetChrono
    O: g.resetChrono()
       print "CHRONO RESET"
       g.refreshChronoDisplay()




