INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI

    root = Tk()
    root.title("A Watch")
    g = DWatchGUI(root, eventhandler)

    eventhandler.start()
    root.mainloop()
    exit()

STATECHART:
    DISPLAY[DS][CS]
        TIME_DISPLAY [DS]
            RUNNING_TIME [DS]
        EDIT_TIME
            EDIT_MODE [DS]
            INCREASING_TIME

    CHRONO [DS][CS]
        STOP [DS]
        RUNNING

    LIGHT[CS][DS]
        OFF[CS][DS]
        ON[CS]

    ALARM [DS][CS]
        ALARM_DISPLAY_OFF [DS]
        ALARM_DISPLAY_ON
        EDIT_ALARM
        INCREASING_TIME

    ALARMING [DS][CS]
        OFF [DS]
        ON
          LIGHT_ON [DS]
          LIGHT_OFF


# LIGHT
TRANSITION:
    S: LIGHT.OFF
    N: LIGHT.ON
    E: lightOn
    O: g.setIndiglo()

TRANSITION:
    S: LIGHT.ON
    N: LIGHT.OFF
    E: lightOff
    O: g.unsetIndiglo()

TRANSITION:
    S: DISPLAY.TIME_DISPLAY.RUNNING_TIME
    N: DISPLAY.TIME_DISPLAY.RUNNING_TIME
    T: 1
    O: g.updateRunningTime()

TRANSITION:
    S: DISPLAY.TIME_DISPLAY.RUNNING_TIME
    N: DISPLAY.EDIT_TIME
    E: editTime
    O: g.turnOffTimeDisplayMode()
       g.turnOnEditMode()
       [DUMP("Stop running time to edit")]

TRANSITION:
    S: DISPLAY.EDIT_TIME.EDIT_MODE
    N: DISPLAY.EDIT_TIME.INCREASING_TIME
    E: increase
    O: [DUMP("Start adjusting Time")]
       g.updateRunningTime()

TRANSITION:
    S: DISPLAY.EDIT_TIME.INCREASING_TIME
    N: DISPLAY.EDIT_TIME.INCREASING_TIME
    T: 0.3
    O: [DUMP("Adjusting Time")]
       g.updateRunningTime()

TRANSITION:
    S: DISPLAY.EDIT_TIME.INCREASING_TIME
    N: DISPLAY.EDIT_TIME.EDIT_MODE
    E: stopInc
    O: [DUMP("Stop adjusting Time")]

TRANSITION:
    S: DISPLAY.EDIT_TIME.EDIT_MODE
    N: DISPLAY.TIME_DISPLAY.RUNNING_TIME
    T: 5
    O: [DUMP("Stop waiting for editing action1")]
       g.turnOnTimeDisplayMode()
       g.refreshTimeDisplay()
       g.turnOffEditMode()


TRANSITION:
    S: DISPLAY.EDIT_TIME.EDIT_MODE
    N: DISPLAY.TIME_DISPLAY.RUNNING_TIME
    E: finishEdit
    O: [DUMP("Stop waiting for editing action2")]
       g.turnOnTimeDisplayMode()
       g.refreshTimeDisplay()
       g.turnOffEditMode()

TRANSITION:
    S: CHRONO.STOP
    N: CHRONO.RUNNING
    E: initChrono
    O: print "CHRONO STARTED"

TRANSITION:
    S: CHRONO.RUNNING
    N: CHRONO.RUNNING
    T: 0.25
    O: g.chronoRunning()

TRANSITION:
    S: CHRONO.RUNNING
    N: CHRONO.STOP
    E: initChrono
    O: print "CHRONO STOPPED"


TRANSITION:
    S: CHRONO.STOP
    N: CHRONO.STOP
    E: resetChrono
    O: g.resetChrono()
       print "CHRONO RESET"
       g.refreshChronoDisplay()

TRANSITION:
    S: ALARM.ALARM_DISPLAY_OFF
    N: ALARM.ALARM_DISPLAY_ON
    E: onoff
    O: g.refreshAlarmDisplay()
       g.turnOffTimeDisplayMode()
       g.turnOnAlarmDisplayMode()

TRANSITION:
    S: ALARM.ALARM_DISPLAY_ON
    N: ALARM.ALARM_DISPLAY_OFF
    E: onoff
    O: g.turnOnTimeDisplayMode()
       g.refreshTimeDisplay()
       g.turnOffAlarmDisplayMode()

TRANSITION:
    S: ALARM.ALARM_DISPLAY_ON
    N: ALARM.EDIT_ALARM
    E: setAlarm
    O: [DUMP("Enter edit alarm mode")]
       g.refreshAlarmDisplay()
       g.turnOffTimeDisplayMode()
       g.turnOnAlarmEditMode()

TRANSITION:
    S: ALARM.ALARM_DISPLAY_OFF
    N: ALARM.EDIT_ALARM
    E: setAlarm
    O: [DUMP("Enter edit alarm mode")]
       g.refreshAlarmDisplay()
       g.turnOffTimeDisplayMode()
       g.turnOnAlarmEditMode()


TRANSITION:
    S: ALARM.EDIT_ALARM
    N: ALARM.INCREASING_TIME
    E: increase
    O: g.increaseAlarmByOne()
       g.refreshAlarmDisplay()
       [DUMP("Start increasing alarm time")]

TRANSITION:
    S: ALARM.INCREASING_TIME
    N: ALARM.INCREASING_TIME
    T: 0.3
    O: g.increaseAlarmByOne()
       g.refreshAlarmDisplay()
       [DUMP("Adjusting alarm time")]

TRANSITION:
    S: ALARM.INCREASING_TIME
    N: ALARM.EDIT_ALARM
    E: stopInc
    O: [DUMP("Stop adjusting alarm time")]

TRANSITION:
    S: ALARM.EDIT_ALARM
    N: ALARM.ALARM_DISPLAY_ON
    T: 5
    O: [DUMP("Stop waiting for editing alarm")]
       g.turnOffAlarmEditMode()
       g.turnOnAlarmDisplayMode()

TRANSITION:
    S: ALARM.EDIT_ALARM
    N: ALARM.ALARM_DISPLAY_ON
    E: finishEdit
    O: [DUMP("Stop editing alarm")]
       g.turnOffAlarmEditMode()
       g.turnOnAlarmDisplayMode()


TRANSITION:
    S: ALARMING.OFF
    N: ALARMING.ON
    E: alarming
    O: [DUMP("Alarming")]

TRANSITION:
    S: ALARMING.ON.LIGHT_ON
    N: ALARMING.ON.LIGHT_OFF
    T: 0.25
    O: [DUMP("Blinking Off")]
       g.unsetIndiglo()


TRANSITION:
    S: ALARMING.ON.LIGHT_OFF
    N: ALARMING.ON.LIGHT_ON
    T: 0.25
    O: [DUMP("Blinking On")]
       g.setIndiglo()

TRANSITION:
    S: ALARMING.ON
    N: ALARMING.OFF
    T: 4
    O: [DUMP("Stop Alarming")]
       g.stopAlarming()

TRANSITION:
    S: ALARMING.ON
    N: ALARMING.OFF
    E: alarmOff
    O: [DUMP("Stop Alarming")]
       g.stopAlarming()


